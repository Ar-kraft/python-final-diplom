openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/basket:
    get:
      operationId: api_v1_basket_retrieve
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_basket_create
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_basket_update
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_basket_destroy
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/categories/:
    get:
      operationId: api_v1_categories_list
      description: Класс для просмотра категорий
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: api_v1_categories_create
      description: Класс для просмотра категорий
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: api_v1_categories_retrieve
      description: Класс для просмотра категорий
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категория.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_categories_update
      description: Класс для просмотра категорий
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категория.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_categories_partial_update
      description: Класс для просмотра категорий
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категория.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_categories_destroy
      description: Класс для просмотра категорий
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категория.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/order:
    get:
      operationId: api_v1_order_retrieve
      description: Класс для получения и размешения заказов пользователями
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: Класс для получения и размешения заказов пользователями
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders:
    get:
      operationId: api_v1_partner_orders_retrieve
      description: Класс для получения заказов поставщиками
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/state:
    get:
      operationId: api_v1_partner_state_retrieve
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_partner_state_create
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/update:
    post:
      operationId: api_v1_partner_update_create
      description: Класс для обновления прайса от поставщика
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      description: Класс для поиска товаров
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductInfoList'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      description: Класс для поиска товаров
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о продукте.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
  /api/v1/shops/:
    get:
      operationId: api_v1_shops_list
      description: Класс для просмотра списка магазинов
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
    post:
      operationId: api_v1_shops_create
      description: Класс для просмотра списка магазинов
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/shops/{id}/:
    get:
      operationId: api_v1_shops_retrieve
      description: Класс для просмотра списка магазинов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    put:
      operationId: api_v1_shops_update
      description: Класс для просмотра списка магазинов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shop'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    patch:
      operationId: api_v1_shops_partial_update
      description: Класс для просмотра списка магазинов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShop'
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    delete:
      operationId: api_v1_shops_destroy
      description: Класс для просмотра списка магазинов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/contact:
    get:
      operationId: api_v1_user_contact_retrieve
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_contact_create
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_user_contact_update
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_user_contact_destroy
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/details:
    get:
      operationId: api_v1_user_details_retrieve
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_details_create
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/login:
    post:
      operationId: api_v1_user_login_create
      description: Класс для авторизации пользователей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/password_reset:
    post:
      operationId: api_v1_user_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/user/password_reset/confirm:
    post:
      operationId: api_v1_user_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /api/v1/user/register:
    post:
      operationId: api_v1_user_register_create
      description: Для регистрации покупателей
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/user/register/confirm:
    post:
      operationId: api_v1_user_register_confirm_create
      description: Класс для подтверждения почтового адреса
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название категории
          maxLength: 50
      required:
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 100
        house:
          type: string
          title: Дом
          maxLength: 35
        apartment:
          type: string
          title: Квартира
          maxLength: 15
        e_mail:
          type: string
          format: email
          maxLength: 50
        user:
          type: integer
          writeOnly: true
          title: Пользователь
        phone:
          type: string
          title: Телефон
          maxLength: 35
        work_phone:
          type: string
          title: Рабочий телефон
          maxLength: 40
      required:
      - city
      - id
      - phone
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedProductInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductInfo'
    PaginatedShopList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    PasswordToken:
      type: object
      properties:
        password:
          type: string
          title: Пароль
        token:
          type: string
      required:
      - password
      - token
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название категории
          maxLength: 50
    PatchedShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название магазина
          maxLength: 50
        state:
          type: boolean
          title: Cтатус получения заказов
    Product:
      type: object
      properties:
        name:
          type: string
          title: Название продукта
          maxLength: 100
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          title: Модель
          maxLength: 100
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
          title: Магазин
        quantity:
          type: integer
          title: Количество
        price:
          type: integer
          title: Цена
        price_rrc:
          type: integer
          title: Рекомендуемая розничная цена
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - model
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
    ProductParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          title: Значение
          maxLength: 100
      required:
      - parameter
      - value
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название магазина
          maxLength: 50
        state:
          type: boolean
          title: Cтатус получения заказов
      required:
      - id
      - name
    TypeEnum:
      enum:
      - shop
      - buyer
      type: string
      description: |-
        * `shop` - Магазин
        * `buyer` - Покупатель
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 40
        company:
          type: string
          nullable: true
          title: Компания
          maxLength: 40
        position:
          type: string
          nullable: true
          title: Должность
          maxLength: 40
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип пользователя
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          readOnly: true
      required:
      - contacts
      - email
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
